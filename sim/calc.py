# -*- coding: utf-8 -*-

# нижний порог срабатывания компаратора (STM1061N38WX6F), В
V_COMP_TH_MINUS = 3.8 
# гистерезис срабатывания компаратора (STM1061xx 5% (от 2% до 8%)), В
V_COMP_TH_HYST = 0.05*V_COMP_TH_MINUS 
# верхний порог срабатывания компаратора (STM1061xx), В
V_COMP_TH_PLUS = V_COMP_TH_MINUS + V_COMP_TH_HYST 

# сопротивление верхнего плеча делителя, Ом
R1 = 100e3
# сопротивление обратной связи, Ом
R_FB = 390e3
# сопротивление подтяжки на выходе компоратора, Ом
R3 = 100e3
# верхний порог срабатывания схемы (т.е. включение), В
V_HI = 150


def calcR2(R1, Rfb, Vhi):
	''' (num, num, num) -> int
	Рассчет сопротивления нижннего плеча делителя R2, для компаратора с обратной 
	связью Rfb и порогом срабатывания Vhi. Сопротивление верхнего плеча R1. 
	'''
	R2_tmp = 1.0 * R1*V_COMP_TH_PLUS / (Vhi - V_COMP_TH_PLUS)
	print "R2 = " + str(R2_tmp)
	R2 = 1.0 * Rfb * R2_tmp / (Rfb - R2_tmp)
	return int(R2)

# верхний порог срабатывания схемы 
V_HI = 150

# рассчет нижнего плеча делителя (т.е. отключения)
R2 = calcR2(R1, R_FB, V_HI)

print "R2 = " + str(R2)


def calcVLow(R1, R2, R3, Rfb):
	''' (num, num, num) -> float

		Рассчет нижнего порогра срабатывания схемы исходя из сопротивления
		верхнего R1 и нижнего R2 плечей делителя, сопротивления обратной связи 
		Rfb и сопротивления подтяжки выхода компоратора R3.
	'''
	R1_tmp = 1.0 * R1*(Rfb + R3)/(R1 + Rfb + R3)
	Vlow =  1.0 * V_COMP_TH_MINUS*(R1_tmp + R2) / R2
	return round(Vlow, 2)

# рассчет нижнего порога отключения
V_LOW = calcVLow(R1, R2, R3, R_FB)

print "V_LOW = " + str(V_LOW)